-- Create Author Table
CREATE TABLE author (
    author_id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    birth_year YEAR,
    death_year YEAR,
    bio TEXT,
    image VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT,
    deleted_at DATETIME DEFAULT NULL,
    deleted_by INT,
    INDEX(created_by),
    INDEX(updated_by),
    INDEX(deleted_by)
);

-- Create Genre Table
CREATE TABLE genre (
    genre_id INT AUTO_INCREMENT PRIMARY KEY,
    genre_name VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT,
    deleted_at DATETIME DEFAULT NULL,
    deleted_by INT,
    INDEX(created_by),
    INDEX(updated_by),
    INDEX(deleted_by)
);

-- Create Book Table
CREATE TABLE book (
    book_id INT AUTO_INCREMENT PRIMARY KEY,
    isbn VARCHAR(20),
    title VARCHAR(255),
    description TEXT,
    price DECIMAL(10, 2),
    author_id INT,
    genre_id INT,
    image VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT,
    deleted_at DATETIME DEFAULT NULL,
    deleted_by INT,
    INDEX(author_id),
    INDEX(genre_id),
    INDEX(created_by),
    INDEX(updated_by),
    INDEX(deleted_by),
    FOREIGN KEY (author_id) REFERENCES author(author_id),
    FOREIGN KEY (genre_id) REFERENCES genre(genre_id)
);

-- Create User Table
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    lastname VARCHAR(100),
    bio TEXT,
    email VARCHAR(255) UNIQUE,
    password VARCHAR(255),
    image VARCHAR(255),
    privilege ENUM('admin', 'user') DEFAULT 'user',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT,
    deleted_at DATETIME DEFAULT NULL,
    deleted_by INT,
    INDEX(updated_by),
    INDEX(deleted_by)
);

-- Create Book_Collections Table
CREATE TABLE book_collections (
    book_id INT,
    user_id INT,
    PRIMARY KEY (book_id, user_id),
    INDEX(user_id),
    FOREIGN KEY (book_id) REFERENCES book(book_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- Create Balance Table
CREATE TABLE balance (
    user_id INT PRIMARY KEY,
    money DECIMAL(10, 2),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- Create Payment Table
CREATE TABLE payment (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    book_id INT,
    date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    money DECIMAL(10, 2),
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (book_id) REFERENCES book(book_id)
);

-- Create Subscription_People Table
CREATE TABLE subscription_people (
    id INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted_at DATETIME DEFAULT NULL,
    deleted_by INT,
    INDEX(deleted_by)
);

-- Create News Table
CREATE TABLE news (
    news_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255),
    news_content TEXT,
    image VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT,
    deleted_at DATETIME DEFAULT NULL,
    deleted_by INT,
    INDEX(created_by),
    INDEX(updated_by),
    INDEX(deleted_by)
);

-- Create Coupons Table
CREATE TABLE coupons (
    coupon_id INT AUTO_INCREMENT PRIMARY KEY,
    coupon_code VARCHAR(50) UNIQUE,
    amount DECIMAL(10, 2),
    is_used BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted_at DATETIME DEFAULT NULL,
    deleted_by INT,
    INDEX(deleted_by)
);

-- Create User_Coupons Table
CREATE TABLE user_coupons (
    user_coupon_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    coupon_id INT,
    is_used BOOLEAN DEFAULT FALSE,
    used_at TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (coupon_id) REFERENCES coupons(coupon_id)
);


-- Insert data into User Table
INSERT INTO users (name, lastname, bio, email, password, image, updated_by)
VALUES 
('Michael', 'Brown', 'Book enthusiast and avid reader.', 'michael@example.com', 'password123', 'michael_brown.jpg', 1),
('Emily', 'Davis', 'Lover of literature and aspiring writer.', 'emily@example.com', 'password456', 'emily_davis.jpg', 1),
('Daniel', 'Wilson', 'Bookworm and collector of rare editions.', 'daniel@example.com', 'password789', 'daniel_wilson.jpg', 1),
('John', 'Doe', NULL, 'john@example.com', 'password', 'john_doe.jpg', 1),
('Alice', 'Smith', NULL, 'alice@example.com', 'password', 'alice_smith.jpg', 1),
('Michael', 'Brown', NULL, 'michael2@example.com', 'password', 'michael_brown.jpg', 1),
('Emily', 'Johnson', NULL, 'emily@example.com', 'password', 'emily_johnson.jpg', 1),
('David', 'Williams', NULL, 'david@example.com', 'password', 'david_williams.jpg', 1);

-- Insert data into Author Table
INSERT INTO author (first_name, last_name, birth_year, death_year, bio, image, created_by, updated_by)
VALUES 
('Jane', 'Doe', '1975', 'NULL', 'Jane Doe is a prolific author known for her captivating novels.', 'jane_doe.jpg', 1, 1),
('John', 'Smith', '1980', 'NULL', 'John Smith is a bestselling author with a flair for mystery novels.', 'john_smith.jpg', 1, 1),
('Alice', 'Johnson', '1992', 'NULL', 'Alice Johnson is a rising star in the world of young adult fiction.', 'alice_johnson.jpg', 1, 1),
('J.K.', 'Rowling', '1965', NULL, 'British author, best known for the Harry Potter series', 'jk_rowling.jpg', 1, 1),
('George', 'Orwell', '1903', '1950', 'English novelist and essayist, known for works like "1984" and "Animal Farm"', 'george_orwell.jpg', 1, 1),
('Stephen', 'King', '1947', NULL, 'American author of horror, supernatural fiction, suspense, crime, science-fiction, and fantasy novels', 'stephen_king.jpg', 1, 1),
('Agatha', 'Christie', '1890', '1976', 'English writer known for her detective novels', 'agatha_christie.jpg', 1, 1),
('Tolkien', 'J.R.R.', '1892', '1973', 'English writer, poet, philologist, and university professor, best known as the author of the classic high fantasy works The Hobbit, The Lord of the Rings', 'tolkien.jpg', 1, 1);

-- Insert data into Genre Table
INSERT INTO genre (genre_name, created_by, updated_by)
VALUES 
('Fiction', 1, 1),
('Mystery', 1, 1),
('Young Adult', 1, 1),
('Fantasy', 1, 1),
('Dystopian', 1, 1),
('Horror', 1, 1),
('Mystery', 1, 1),
('Science Fiction', 1, 1);

-- Insert data into Book Table
INSERT INTO book (isbn, title, description, price, author_id, genre_id, image, created_by, updated_by)
VALUES 
('978-3-16-148410-0', 'The Mystery of the Old Mansion', 'A gripping tale of suspense and intrigue.', 12.99, 1, 2, 'mystery_mansion.jpg', 1, 1),
('978-3-16-148411-0', 'Lost in Wonderland', 'Follow Alice on her adventures in a fantastical world.', 9.99, 3, 3, 'lost_wonderland.jpg', 1, 1),
('978-3-16-148412-0', 'The Secret Garden', 'A timeless classic about the power of friendship and nature.', 8.99, 2, 1, 'secret_garden.jpg', 1, 1),
('9780439554930', 'Harry Potter and the Philosopher''s Stone', 'The first book in the Harry Potter series', '15.99', 1, 1, 'harry_potter.jpg', 1, 1),
('9780451524935', '1984', 'A dystopian social science fiction novel', '12.99', 2, 2, '1984.jpg', 1, 1),
('9780307743657', 'The Shining', 'A horror novel by Stephen King', '10.99', 3, 3, 'the_shining.jpg', 1, 1),
('9780064404990', 'And Then There Were None', 'A mystery novel by Agatha Christie', '9.99', 4, 4, 'and_then_there_were_none.jpg', 1, 1),
('9780618968636', 'The Hobbit', 'Fantasy novel by J.R.R. Tolkien', '11.99', 5, 1, 'the_hobbit.jpg', 1, 1);

-- Insert data into Book_Collections Table
INSERT INTO book_collections (book_id, user_id)
VALUES 
(1, 1),
(2, 2),
(3, 3),
(1, 3),
(3, 1),
(4, 3),
(5, 4);

-- Insert data into Balance Table
INSERT INTO balance (user_id, money)
VALUES 
(1, 100.00),
(2, 75.50),
(3, 120.25);

-- Insert data into Payment Table
INSERT INTO payment (user_id, book_id, money)
VALUES 
(1, 1, 12.99),
(2, 2, 9.99),
(3, 3, 8.99);

-- Insert data into Subscription_People Table
INSERT INTO subscription_people (email, deleted_by)
VALUES 
('subscriber1@example.com', 1),
('subscriber2@example.com', 1),
('subscriber3@example.com', 1);

-- Insert data into News Table
INSERT INTO news (title, news_content, image, created_by, updated_by)
VALUES 
('New Release: The Mystery of the Old Mansion', 'Check out the latest mystery novel by John Smith!', 'new_release_mystery.jpg', 1, 1),
('Author Spotlight: Alice Johnson', 'Learn more about the rising star in young adult fiction.', 'author_spotlight_alice.jpg', 1, 1),
('Exclusive Interview with Jane Doe', 'Discover the secrets behind Jane Doe\'s bestselling novels.', 'interview_jane.jpg', 1, 1);

-- Insert data into Coupons Table
INSERT INTO coupons (coupon_code, amount, deleted_by)
VALUES 
('SAVE10', 10.00, 1),
('SPRINGSALE', 5.00, 1),
('FREESHIP', 0.00, 1);

-- Insert data into User_Coupons Table
INSERT INTO user_coupons (user_id, coupon_id)
VALUES 
(1, 1),
(2, 2),
(3, 3);